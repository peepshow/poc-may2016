$icon-font-path: '../fonts/';

// bower:scss
@import "bower_components/normalize-scss/_normalize.scss";
@import "bower_components/bourbon/app/assets/stylesheets/_bourbon.scss";
@import "bower_components/neat/app/assets/stylesheets/_neat.scss";
@import "bower_components/material-colors/dist/colors.scss";
// endbower
//@import "bower_components/bootstrap-sass/assets/stylesheets/_bootstrap.scss";
@import "bower_components/flickity/dist/flickity.min.css";

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/* Space out content a bit */
body {
  padding-top: 20px;
  padding-bottom: 20px;
}

/* Everything but the jumbotron gets side spacing for mobile first views */
.header,
.marketing,
.footer {
  padding-left: 15px;
  padding-right: 15px;
}

/* Custom page header */
.header {
  border-bottom: 1px solid #e5e5e5;

  /* Make the masthead heading the same height as the navigation */
  h3 {
    margin-top: 0;
    margin-bottom: 0;
    line-height: 40px;
    padding-bottom: 19px;
  }
}

/* Custom page footer */
.footer {
  padding-top: 19px;
  color: #777;
  border-top: 1px solid #e5e5e5;
}

.container-narrow > hr {
  margin: 30px 0;
}

/* Main marketing message and sign up button */
.jumbotron {
  text-align: center;
  border-bottom: 1px solid #e5e5e5;
  .btn {
    font-size: 21px;
    padding: 14px 24px;
  }
}

/* Supporting marketing content */
.marketing {
  margin: 40px 0;
  p + h4 {
    margin-top: 28px;
  }
}

/* Responsive: Portrait tablets and up */
@media screen and (min-width: 768px) {
  .container {
    max-width: 730px;
  }

  /* Remove the padding we set earlier */
  .header,
  .marketing,
  .footer {
    padding-left: 0;
    padding-right: 0;
  }

  /* Space out the masthead */
  .header {
    margin-bottom: 30px;
  }

  /* Remove the bottom border on the jumbotron for visual effect */
  .jumbotron {
    border-bottom: 0;
  }
}

section:not(.magicblue) {
  height: 200vh;
  position: relative;
  width: 100vw;
}


// Meat & Taters
// ============================================

$box-map: (
  1: box,
  2: box,
  3: box
);

.box {
  $size: 50%;
  position: absolute;
  left: 0;
  top: 0;
  width: $size;
  height: $size;
  background: #000;
}

.box1 {
  width: 400px;
  height: 400px;
  top: 500px;
  background: yellow;
}

.box2 {
  width: 100px;
  height: 100px;
  top: 500px;
  background: green;
}

.box3 {
  width: 100px;
  height: 100px;
  top: 500px;
  background: lightgreen;
}

@each $number, $class in $box-map {
  .#{$class}#{$number} {
    transform: translateX(#{$number*25*1%}) translateY(#{$number*45*1%});
    //background:darken(red, $number * 10% );
  }
}

$yellow: #FDD835;

// Ribbon
// This following mixin is modified from the original Bourbon triangle add-on (https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_triangle.scss) in order to customise triangle shape and foreground / background colours, which can also create CSS ribbon incredibly easy.

// @include triangle($width $height, $foreground-color $background-color, $direction)
// $height and $background-color can be omitted, if so, $height will equal to $width and $background-color will be transparent.
// $direction contains the following arguments: up, down, left, right, up-right, up-left, down-right, down-left, inset-up, inset-down, inset-left, inset-right.

@mixin triangle ($size, $color, $direction) {
  height: 0;
  width: 0;

  $width: nth($size, 1);
  $height: nth($size, length($size));

  $foreground-color: nth($color, 1);
  $background-color: transparent !default;
  @if (length($color) == 2) {
    $background-color: nth($color, 2);
  }

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {

    $width: $width / 2;

    @if $direction == up {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-bottom: $height solid $foreground-color;

    } @else if $direction == right {
      border-top: $width solid $background-color;
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;

    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;

    } @else if $direction == left {
      border-top: $width solid $background-color;
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
    }
  }

  @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left:  $width solid $background-color;

    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  }

  @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left:  $width solid $background-color;

    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  }

  @else if ($direction == inset-up) {
    border-width: $height $width;
    border-style: solid;
    border-color: $background-color $background-color $foreground-color;
  }

  @else if ($direction == inset-down) {
    border-width: $height $width;
    border-style: solid;
    border-color: $foreground-color $background-color $background-color;
  }

  @else if ($direction == inset-right) {
    border-width: $width $height;
    border-style: solid;
    border-color: $background-color $background-color $background-color $foreground-color;
  }

  @else if ($direction == inset-left) {
    border-width: $width $height;
    border-style: solid;
    border-color: $background-color $foreground-color $background-color $background-color;
  }
}
body, html {
  height: 100%;
  min-height: 100%;
  font-family: 'Open Sans', sans-serif;
}

body {
  background: linear-gradient(to bottom, rgba(154, 203, 230, 1) 0%, rgba(117, 230, 202, 1) 43%, rgba(117, 230, 202, 1) 69%, rgba(216, 245, 186, 1) 100%);
  transform-style: preserve-3d;
  transform: perspective(400px);
  position: relative;
}
* {
  box-sizing: border-box;
}
.wrap {
  width: 100vw;
  height: 100%;
  position: relative;
  overflow: hidden;

  .bg {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/187524/poc-index-background.jpg') no-repeat center center;
    background-size: cover;
    transform: scale(1.1);
  }
}
header {
  text-align: center;
  color: #fff;
  padding: 6em 0 0;
  position: relative;
  text-shadow: 0 0 10px rgba(50,50,50,0.4);
  h1 {
    font-size: 1em;
    font-weight: 400;
    line-height: 1em;
    margin: 0.6em 0 0.2em;
    text-transform: uppercase;
    letter-spacing: 0.3em;
  }
  h2 {
    font-size: 2em;
    font-weight: 400;
    line-height: 1em;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 0.3em;
  }
  p {
    width: 500px;
    margin: 2em auto 0;
  }
}

nav.chapter-nav {
  margin-left: 100px;
  background: url("https://s3-us-west-2.amazonaws.com/s.cdpn.io/187524/chapter_header.png") no-repeat;
  min-width: 250px;
  min-height: 70px;
  ul {
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    list-style: none;
    li {
      a {
        display: block;
        background: #FFF;
        min-height: 10px;
        width: 30px;
        margin-right: 14px;
      }
      &.active a {
        background: $yellow;
        min-height: 30px;
      }
      &.active a:after {
        @include triangle(30px 9px, transparent #000, up);
        bottom: -10px;
      }
    }
  }
}


.gallery {
  position: relative;
  top: 30%;
  transform: translate(0, -50%);
  background: transparent;
}
.gallery-cell {
  width: 28%;
  //height: 500px;
  //margin-right: 10px;
  //background: #8C8;
  &.is-selected {
    //background: #ED2;
  }
}
/* big buttons, no circle */
.flickity-prev-next-button {
  width: 40px;
  height: 40px;
  background: transparent;
  top: 90%;
  border: 1px solid #fff;
  //background: rgba(255,255,255,0.8);
}
/* position outside */
.flickity-prev-next-button.previous {
  left: 46%;
}
.flickity-prev-next-button.next {
  right: 46%;
}
/* arrow color */
.flickity-prev-next-button .arrow {
  fill: white;
}
.flickity-prev-next-button.no-svg {
  color: white;
}
.flickity-prev-next-button:hover {
  background: rgba($yellow, 0.5);
}
/* hide disabled button */
.flickity-prev-next-button:disabled {
  opacity: 0.5;
}

.chapter-card {
  position: relative;
  width: 80%;
  height: 320px;
  margin: 20px 0 80px 10%;
  box-shadow: 0 45px 80px rgba(0, 0, 0, 0.4);
  border-radius: 5px;
  overflow: hidden;
  transition: all 0.5s ease-out;
  transform: scale(0.8, 0.8);
}
.is-selected .chapter-card {
  transform: scale(1);
}

div[class*="layer-"] {
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  background-size: 100% auto;
  background-repeat: no-repeat;
  background-position: 0 0;
  transition: 0.1s;
  text-align: center;
}

.layer-1 {
  //background-image: url("https://unsplash.it/400/700");
  height: 220px;
  overflow: hidden;
  img {
    width: 100%;
    height: auto;
  }
}

.layer-2 {
  margin-top: 120px;
  h2 {
    text-transform: uppercase;
    font-weight: 700;
    color: #fff;
    letter-spacing: 0.3em;
    font-size: 1.2em;
  }
}

.layer-3 {
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.layer-4 {
  margin-top: 200px;
  .skewed {
    background: $md-deep-purple-500;
    transform: skewY(-8deg);
    padding-top: 2em;
    min-height: 400px;
    padding: 2em 40px;
    box-shadow: 0 -20px 70px rgba(50,50,50,0.5);
    * {
      transform: skewY(8deg);
    }
  }
}


[class^="ribbon-"] {
  position: relative;
  margin-bottom: 10px;
  text-align: left;
  &:before, &:after {
    content: "";
    position: absolute;
  }
  h3 {
    color: #000;
    line-height: 2em;
    text-align: center;
    font-weight: 100;
  }
}
// Ribbon-1
.ribbon-1 {
  width: 40px;
  height: 30px;
  background: $yellow;
  top: 174px;
  left: 50%;
  transform: translate(-50%, 0);
  // &:before {
  //   @include triangle(15px, darken($yellow, 30%), down-right);
  //   left: -6px;
  // }
  &:after {
    @include triangle(40px 12px, transparent $yellow, up);
    bottom: -12px;
  }
}
